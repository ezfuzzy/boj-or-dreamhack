#include <iostream>
using namespace std;
/*
1. X가 3으로 나누어 떨어지면, 3으로 나눈다.
2. X가 2로 나누어 떨어지면, 2로 나눈다.
3. 1을 뺀다.
--
정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.
--

첫째 줄에 1보다 크거나 같고, 10**6보다 작거나 같은 정수 N이 주어진다.
--
첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.


50          99
25 49       33  98
24
8   12
4   4   6
2   2   2   3
1   1   1   1   

10 > 5 > 4 > 2 > 1
:: 10 > 9 > 3 > 1 
:: 11 > 10 > 9 > 3 1

dp[i] = i를 1로 만드는 최소 연산 수 
*/

int dp[1000001];

int main(){

    int num, index = 0, a, b, c;
    scanf("%d", &num);

    for (int i = 2; i <= num; i++){ 
        a = 100000, b = 100000;
        if(i % 3 == 0)
            a = dp[i/3] + 1;
        if(i % 2 == 0)
            b = dp[i/2] + 1;
    
        c = dp[i-1] + 1;
        dp[i] = min(min(a,b),c);
    }

    printf("%d\n", dp[num]);

    return 0;
}